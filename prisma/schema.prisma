generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model StrengthExercise {
  id             String           @id @default(uuid())
  name           String           @unique
  category       String
  createdAt      DateTime         @default(now())
  updatedAt      DateTime         @updatedAt
  RepMaxStrength RepMaxStrength[]
}

model AerobicExercise {
  id            String          @id @default(uuid())
  name          String          @unique
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt
  RepMaxAerobic RepMaxAerobic[]
}

model RepMaxStrength {
  id                 String           @id @default(uuid())
  weight             Float
  reps               Int
  createdAt          DateTime         @default(now())
  updatedAt          DateTime         @updatedAt
  strengthExercise   StrengthExercise @relation(fields: [strengthExerciseId], references: [id])
  strengthExerciseId String
  user               User             @relation(fields: [userId], references: [id])
  userId             String

  @@index([strengthExerciseId])
}

model RepMaxAerobic {
  id                String          @id @default(uuid())
  distance          Int
  time              Int
  createdAt         DateTime        @default(now())
  updatedAt         DateTime        @updatedAt
  aerobicExercise   AerobicExercise @relation(fields: [aerobicExerciseId], references: [id])
  aerobicExerciseId String
  user              User            @relation(fields: [userId], references: [id])
  userId            String

  @@index([aerobicExerciseId])
  @@index([userId])
}

model User {
  id            String   @id @default(uuid())
  studentNumber Int      @unique
  name          String
  email         String   @unique
  password      String
  role          String   @default("aluno")
  gender        String   @default("male")
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  teacher        Teacher?         @relation(fields: [teacherId], references: [id])
  teacherId      String?
  RepMaxStrength RepMaxStrength[]
  RepMaxAerobic  RepMaxAerobic[]

  @@index([email])
  @@index([id])
}

model Teacher {
  id        String   @id @default(uuid())
  name      String
  email     String   @unique
  password  String
  students  User[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([email])
  @@index([id])
}
