generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Exercise {
  id          String   @id @default(uuid())
  name        String   @unique
  category    String
  description String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  weights  Weight[]
  repMaxes RepMax[]

  @@index([name])
}

model Weight {
  id         String   @id @default(uuid())
  weight     Float
  reps       Int
  sets       Int      @default(1)
  date       DateTime
  userId     String
  exerciseId String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  user     User     @relation(fields: [userId], references: [id])
  exercise Exercise @relation(fields: [exerciseId], references: [id])

  @@index([userId])
  @@index([exerciseId])
  @@index([date])
}

model User {
  id        String   @id @default(uuid())
  name      String
  email     String   @unique
  password  String
  role      String   @default("aluno")
  gender    String   @default("male")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  weights   Weight[]
  repMaxes  RepMax[]
  Teacher   Teacher? @relation(fields: [teacherId], references: [id])
  teacherId String?

  @@index([email])
  @@index([id])
}

model Teacher {
  id        String   @id @default(uuid())
  name      String
  email     String   @unique
  password  String
  students  User[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([email])
  @@index([id])
}

model RepMax {
  id         String   @id @default(uuid())
  date       DateTime
  userId     String
  exerciseId String
  max        Float
  reps       Int
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  user     User     @relation(fields: [userId], references: [id])
  exercise Exercise @relation(fields: [exerciseId], references: [id])

  @@index([userId])
  @@index([exerciseId])
  @@index([date])
}
